syntax = "proto2";

package textsecure;

option java_package         = "org.whispersystems.libsignal.protocol";
option java_outer_classname = "SignalProtos";

message SignalMessage {
  optional bytes  ratchetKey      = 1;
  optional uint32 counter         = 2;
  optional uint32 previousCounter = 3;
  optional bytes  ciphertext      = 4;
}

message PreKeySignalMessage {
  optional uint32 registrationId = 5;
  optional uint32 preKeyId       = 1;
  optional uint32 signedPreKeyId = 6;
  optional bytes  baseKey        = 2;
  optional bytes  identityKey    = 3;
  optional bytes  message        = 4; // SignalMessage
}

message KeyExchangeMessage {
  optional uint32 id               = 1;
  optional bytes  baseKey          = 2;
  optional bytes  ratchetKey       = 3;
  optional bytes  identityKey      = 4;
  optional bytes  baseKeySignature = 5;
}

message SenderKeyMessage {
  optional bytes  distribution_uuid = 1;
  optional uint32 chain_id          = 2;
  optional uint32 iteration         = 3;
  optional bytes  ciphertext        = 4;
}

message SenderKeyDistributionMessage {
  optional bytes  distribution_uuid = 1;
  optional uint32 chain_id          = 2;
  optional uint32 iteration         = 3;
  optional bytes  chain_key         = 4;
  optional bytes  signing_key       = 5;
}

message DeviceConsistencyCodeMessage {
  optional uint32 generation = 1;
  optional bytes  signature  = 2;
}

message Content {
    optional bytes /* DataMessage */ data_message = 1;
    optional bytes /* SyncMessage */ sync_message = 2;
    optional bytes /* CallMessage */ call_message = 3;
    optional bytes /* NullMessageÂ */ null_message = 4;
    optional bytes /* ReceiptMessage */ receipt_message = 5;
    optional bytes /* TypingMessage */ typing_message = 6;
    optional bytes /* SenderKeyDistributionMessage */ sender_key_distribution_message = 7;
    optional bytes /* DecryptionErrorMessage */ decryption_error_message = 8;
}

message DecryptionErrorMessage {
    optional bytes ratchet_key = 1;  // set to the public ratchet key from the SignalMessage if a 1-1 payload fails to decrypt
    optional uint64 timestamp = 2;
    optional uint32 device_id = 3;
}

